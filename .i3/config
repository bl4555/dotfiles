################################################
#
#                                              #
#   Arch Linux GUI i3 WM Configuration File.   #
#   Make a habit to read this file. You will   #
#   find keybindings and various other         #
#   settings here. Please see                  #
#                                              #
#       https://i3wm.org/docs/userguide.html   #
#                                              #
#   for a complete reference on moving forward #
#   from what I have provided here.            #
#                                              #
################################################

set $monitor_left HDMI-1-0
set $monitor_right eDP-1

# essentials
exec_always --no-startup-id "xrandr --output HDMI-1-0 --mode 1920x1080 --rate 144.00 --left-of eDP-1 --primary"
exec_always --no-startup-id "xrandr --output eDP-1 --mode 1920x1080 --rate 120.00 --right-of HDMI-1-0"

exec_always "python3 $HOME/.i3/layout.py"

# This is our mod Key. Currently it is set to the Windows Key.
# You can uncomment the line below to set 'Alt' key as the mod key.
#set $mod Mod1
set $mod Mod4

#borders
new_window pixel 1
new_float normal
hide_edge_borders none

#preferences
focus_follows_mouse no
popup_during_fullscreen smart

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:Hack 10

# start a terminal. We use kitty.
bindsym $mod+Return exec --no-startup-id kitty

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher).
bindsym $mod+d exec --no-startup-id "rofi -theme $HOME/.config/rofi/rofi.rasi -show combi -combi-modi 'drun,ssh,window' -modi combi"  

# Display Wallpaper, always.
exec_always --no-startup-id feh --bg-fill $HOME/wall.png

# Provide Gaps to Windows. Increase/Decrease as you like.
gaps inner 20
gaps outer 20

exec --no-startup-id nextcloud
exec --no-startup-id discord
exec --no-startup-id keepassxc
# Lock Screen This will yield a black lock screen, which
# can be customized to your liking.
bindsym $mod+x exec betterlockscreen -l

# Shutdown the computer
#bindsym $mod+Shift+s exec shutdown now

#Reboot Machine
#bindsym $mod+r exec systemctl reboot

# Suspend the system to RAM (needs swap space)
#bindsym $mod+s exec systemctl suspend

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.

# The 4 lines of text above come from i3 documentation. Waking up from a suspended
# system will launch betterlockscreen
exec --no-startup-id xss-lock --transfer-sleep-lock -- betterlockscreen -l --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
# We use this. System dark theme is applied to it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
# These are examples if you would like to use pactl. We will not use this,
# but rather alsamixer.
#set $refresh_i3status killall -SIGUSR1 i3status
#bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
#bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
#bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
#bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

#Volume Control in ALG i3
bindsym XF86AudioRaiseVolume exec amixer -q set Master 5%+ unmute && pkill -RTMIN+1 i3blocks
bindsym XF86AudioLowerVolume exec amixer -q set Master 5%- unmute && pkill -RTMIN+1 i3blocks
bindsym XF86AudioMute exec amixer -q set Master toggle && pkill -RTMIN+1 i3blocks

##Brightness Control in ALG i3
bindsym XF86MonBrightnessUp exec sudo xbacklight -inc 10
bindsym XF86MonBrightnessDown exec sudo xbacklight -dec 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# -----------------------------------
# SCREENSHOT
# -----------------------------------
bindsym Shift+$mod+S exec sharenix-section -q -s="kurwa.club" -n -c
bindsym Shift+$mod+F exec sharenix -m="c" -n -s="kurwa.club" -c

set $SPOTIFY 5
assign [class="Spotify"] $SPOTIFY
for_window [class="Spotify"] move to workspace $SPOTIFY

set $KEEPASS 6
assign [class="KeePassXC"] $KEEPASS
for_window [class="KeePassXC"] move to workspace $KEEPASS

set $TELEGRAM 1
assign [class="Telegram Desktop"] $TELEGRAM
for_window [class="Telegram Desktop"] move to workspace $TELEGRAM

set $DISCORD 5
assign [class="Discord"] $DISCORD
for_window [class="Discord"] move to workspace $DISCORD

set $CAPRINE 5
assign [class="Caprine"] $CAPRINE
for_window [class="Caprine"] move to workspace $CAPRINE

for_window [class=".*"] title_format " %title"

# The keybindings starting from here till the end of the document are
# used for navigation in the window manager

# 1A] change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# 1B] alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# 2A] move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# 2B] alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# 3] split in horizontal orientation
bindsym $mod+h split h

# 4] split in vertical orientation
bindsym $mod+v split v

# 5] enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# 6] change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# 7] toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# 8] change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# 9A] focus the parent container
bindsym $mod+a focus parent

# 9B] focus the child container
#bindsym $your_keybinding focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

workspace $ws1 output $monitor_left
workspace $ws2 output $monitor_left
workspace $ws3 output $monitor_left
workspace $ws4 output $monitor_left
workspace $ws5 output $monitor_right 
workspace $ws6 output $monitor_right
workspace $ws7 output $monitor_right
workspace $ws8 output $monitor_right
workspace $ws9 output $monitor_right
workspace $ws10 output $monitor_right

# 10] switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# 11] move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# 12A] reload the configuration file
bindsym $mod+Shift+c reload
# 12B] restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# 12C] exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# 13A] resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}


# 13B] Enter Resize Mode
bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available). Commented out due to use of polybar. If you want to
#
# use i3 bars (status or blocks) this are some examples on how you can do it.
bar {
	position top
	status_command i3status | $HOME/.i3/i3-weather/.env/bin/python $HOME/weather.py --wrap-i3-status --api-key 912e3995d593c9c285a474c982eaa043
	status_command i3blocks
	tray_output HDMI-1-0
	font pango:HackNerdFont 10
	separator_symbol ">"
}
